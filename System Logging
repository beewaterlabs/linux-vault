# System Logging

# The syslog standard

Aids in the processing of messages.
Allows logging to be centrally conrolled.
Uses facilities and severities to categorize messseges.

# Facilities & severities:

# Facilities --> What type of program or part of the system a message came from.

#  Number Keyword Description    (local0 ~ local7 can be used for your own custom applications)

0     kern        kernel messages
1     user        user-level messages
2     mail        mail system
3     daemon      systems daemons
4     auth        security/authorization messages
5     syslog      messages generated by syslogd
6     lpr         line printer subsystem
7     news        network news subsystem
8     uucp        UUCP subsystem
9     clock       daemon 
10    authpriv    security/authorization messages
11    ftp         FTP daemon
12    -           NTP subsystem
13    -           log audit
14    -           log alert
15    cron        clock daemon
16    local0      local use 0 (local0)
16    local1      local use 0 (local1)
16    local2      local use 0 (local2)
16    local3      local use 0 (local3)
...
23    local7      local use 7 (local7)

# Severities:

Code    Severity     Keyword              Description 

0       Emergency    emergency (panic)    System is unusable     (Most sever)
1       Alert        alert                Action must be taken immediately
2       Critical     crit                 Critical conditions
3       Error        err (error)          Error conditions
4       Warning      warning (warn)       Warning conditions
5       Notice       notice               Normal but significant condition
6       Info         info                 Informational messages
7       Debug        debug                Debug-level messages   (Least sever)   

# Where logs are stored:
# Syslog servers:    Processes syslog messages based on rules.

syslogd
rsyslog
syslog-ng

# rsyslog:

/etc/rsyslog.conf    Main configuration file

$ IncludeConfig /etc/rsyslog.d/*.conf    Cause rsyslog to read and include all configuration files that end in '.conf' that also exsist in the /etc/rsyslog.d/ direcory.

# Logging rules -->  Consist of two fields:

# Selector field     FACILITY.SEVERITY
                     mail.*
                     mail
                     FACILITY.none
                     FACILITY_1.SEVERITY;FACILITY_2.SEVERITY

# Action feild       Determines how a message is processed

# Example Logging Rule:

mail.*    /var/log/mail.log   Matches the messages that have the facility of mail in any severity & writes all the matching messages to /var/log/mail.log

# Caching vs Non-caching:
# Caching is used if the path starts with a pyphen:    ('-')   

mail.info    -var/log/mail.info

# You may loose some messages during a system crash if you are using caching mode.
# Using caching mode can improve I/O performance.

# Example Logging Rules:    Seperate actions for different severities of mail massages:

mail.info    -/var/log/mail.info    Less critical mail messages are using caching mode.    ('-')
mail.warn    -/var/log/mail.warn    /\
mail.err     /var/log/mail.err

# Example Logging Rules on Ubuntu:

auth,authpriv.*                /var/log/auth.log    Ensures that all messages with the auth & authpriv facilities are written to /var/log/auth.log 
*.*;auth.none,authpriv.none    -/var/log/syslog     Writes all messages except ones originating from auth & authpriv facilities to var/log/syslog

# Example Logging Rules on RedHat:

*.info;mail.none;authpriv.none;cron.none /var/log/messages   The rule tells rsyslog to write all messages except mail, authpriv and cron to /var/log/messages

# How to generate your own log messages:
# logger:    Use the logger command to generate syslog mesages.
             Helpful for testing any configuration changes you made to the system logger.
             Generate log messages from your own shell scripts.

logger [options] message

# Options:

-p FACILITY.SEVERITY
-t TAG

# logger example:   We generate a message with a mail facility at a severity level of info.
                    You can see that the message made it's way to the propper logfile.

$ logger -p mail.info -t mailtest "Test."
$ sudo tail -1 /var/log/mail.log

human@ubuntu-dev-vm:~$ sudo tail -1 /var/log/mail.log
2024-12-09T06:47:15.018168+00:00 ubuntu-dev-vm mailtest: Test

# Rotating log files:
# logrotate                 Rotate, compress, remove & mail log files. 
                            Provides an automated way to manage log files and cab prevent filling up your storage space with log files.

/etc/logrotate.conf         Configuration file
include /etc/logrotate.d    Tells logrotate to read configuration files located in the /etc/logrotate.d directory.

# Example logrotate.conf file:

-------Beginning-of-file-------
humann@ubuntu-dev-vm:~$ cat /etc/logrotate.conf 
# see "man logrotate" for details

# global options do not affect preceding include directives

# rotate log files weekly
weekly

# use the adm group by default, since this is the owning group
# of /var/log/.
su root adm

# keep 4 weeks worth of backlogs
rotate 4

# create new (empty) log files after rotating old ones
create

# use date as a suffix of the rotated file
#dateext

# uncomment this if you want your log files compressed
#compress

# packages drop log rotation information into this directory
include /etc/logrotate.d

# system-specific logs may also be configured here.
-------End-of-file-------









