# Environment Variables:  
## Storage location that has a name and a value.
### Can change how an application behaves.                          
#### Example:
EDITOR=nano

# Viewing Enviroonment variables:
# echo $<ENVIRONMENT-VARIABLE-NAME>

printenv          View environment variables. 
printenv | less   Use if there are too many environment variables and they scroll off screen.
printenv HOME     View specific environment variable. PATH would be another.
echo $HOME        Display home HOME environment variable.
echo $PATH        Display home PATH environment variable.

# Creating Environment Variables:  (set)
# Syntax:
export VAR="value"

# Examples:
export EDITOR="vi"        Sets the editor to vi.
export TZ="US/Pacific"    Sets the timezone to US Pacific time.

# Live example: 
++++++++++++++++++++++++++++++++++++++++++++
[adminuser@fedora ~]$ export TZ="US/Pacific"
$ printenv | grep TZ
$ TZ=US/Pacific
++++++++++++++++++++++++++++++++++++++++++++

# Removing Environment Variables:   (unset)
# Syntax:
unset VAR
# Example:
unset TZ ("TZ" or the Environment Variable name you'd like to unset.)

# The act of setting and unsetting Environment Variables from the cmd line only effects your current running session only.
# Persist Environment Variables:    (Peronal Initialization files - .bashrc <--- configuration file for the Bash shell)
#                                   (.profile <--- configuration file for the userâ€™s shell)
# Editing this file will keep your settings persistent.        (~/.bash_profile)

export TZ="US/Pacific"

# I've added the above cmd to my ~/.bashrc_profile to make the setting persistant, then tested by changing the time zone to Central (export TZ="US/Central") 
# locally, logging out and back in: 

# Live example, after logging back in: 
++++++++++++++++++++++++++++++++++++++++++++
[adminuser@fedora ~]$ date
Thu Nov 21 03:11:17 PM PST 2024
++++++++++++++++++++++++++++++++++++++++++++















